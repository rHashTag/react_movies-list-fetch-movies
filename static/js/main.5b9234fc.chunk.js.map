{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","url","getMovie","title","a","fetch","json","FindMovie","addMovie","useState","setTitle","currentMovie","setCurrentMovie","searchError","setSearchError","handleSearch","movieFromServer","Response","htmlFor","value","onChange","event","target","type","id","placeholder","cn","onClick","disabled","App","setMovies","some","mov","ReactDOM","render","document","getElementById"],"mappings":"+TAOaA,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MAER,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAa,UAAQ,aAApC,SAEE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAa,UAAQ,cAAlC,SAAiDD,EAAMK,aAI3D,sBAAKJ,UAAU,UAAU,UAAQ,UAAjC,UACGD,EAAMM,KACP,iCC9BGC,EAA8B,SAACR,GAC1C,IAAQS,EAAWT,EAAXS,OAER,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,c,uCCffC,G,MAAM,+CAEL,SAAeC,EAAtB,kC,4CAAO,WAAwBC,GAAxB,eAAAC,EAAA,sEACeC,MAAM,GAAD,OAAIJ,GAAJ,OAAUE,IAD9B,cACCb,EADD,yBAGEA,EAAMgB,QAHR,4C,sBCSA,IAAMC,EAA6B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3C,EAA0BC,mBAAS,IAAnC,mBAAON,EAAP,KAAcO,EAAd,KACA,EAAwCD,mBAAuB,MAA/D,mBAAOE,EAAP,KAAqBC,EAArB,KACA,EAAsCH,oBAAS,GAA/C,mBAAOI,EAAP,KAAoBC,EAApB,KAEMC,EAAY,uCAAG,4BAAAX,EAAA,0DACfD,EADe,gCAEaD,EAASC,GAFtB,OAEXa,EAFW,OAIjBF,EAA4C,UAA7BE,EAAgBC,UAE/BL,EAAgBI,GANC,2CAAH,qDAuBlB,OACE,qCACE,uBAAMzB,UAAU,aAAhB,UACE,sBAAKA,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQ2B,QAAQ,cAAjC,yBAIA,qBAAK3B,UAAU,UAAf,SACE,uBACE4B,MAAOhB,EACPiB,SAxBQ,SAACC,GACnBX,EAASW,EAAMC,OAAOH,OACtBL,GAAe,IAuBLS,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZlC,UAAWmC,IAAG,QAAS,CAAE,aAAcvB,QAI1CU,GACC,mBAAGtB,UAAU,iBAAb,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACEgC,KAAK,SACLhC,UAAU,kBACVoC,QAASZ,EACT,UAAQ,OAJV,4BAUF,qBAAKxB,UAAU,UAAf,SACE,wBACEgC,KAAK,SACLhC,UAAU,oBACVqC,UAAWjB,EACXgB,QAnDY,WAClBhB,IACFH,EAASG,GACTD,EAAS,IACTE,EAAgB,QAgDR,UAAQ,MALV,qCAaN,qBAAKrB,UAAU,YAAf,SACIoB,IAAiBE,GACjB,qCACE,oBAAItB,UAAU,QAAd,qBACA,cAAC,EAAD,CAAWD,MAAOqB,aCzFjBkB,EAAgB,WAC3B,MAA4BpB,mBAAkB,IAA9C,mBAAOX,EAAP,KAAegC,EAAf,KAWA,OACE,sBAAKvC,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYO,OAAQA,MAEtB,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CAAWiB,SAfA,SAAClB,GACMQ,EACnBiC,MAAK,SAAAC,GAAG,OAAIA,EAAIhC,SAAWV,EAAMU,WAGlC8B,EAAU,GAAD,mBAAKhC,GAAL,CAAaR,cCV5B2C,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.5b9234fc.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\" data-cy=\"card-image\">\n\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movie-title\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const url = 'https://www.omdbapi.com/?apikey=6381aaff&t=';\n\nexport async function getMovie(title: string) {\n  const movie = await fetch(`${url}${title}`);\n\n  return movie.json();\n}\n","import React, { useState } from 'react';\nimport cn from 'classnames';\nimport './FindMovie.scss';\n\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  addMovie: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [currentMovie, setCurrentMovie] = useState<Movie | null>(null);\n  const [searchError, setSearchError] = useState(false);\n\n  const handleSearch = async () => {\n    if (title) {\n      const movieFromServer = await getMovie(title);\n\n      setSearchError(movieFromServer.Response === 'False');\n\n      setCurrentMovie(movieFromServer);\n    }\n  };\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setSearchError(false);\n  };\n\n  const handleAddToList = () => {\n    if (currentMovie) {\n      addMovie(currentMovie);\n      setTitle('');\n      setCurrentMovie(null);\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              value={title}\n              onChange={handleInput}\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn('input', { 'is-danger': !title })}\n            />\n          </div>\n\n          {searchError && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={handleSearch}\n              data-cy=\"find\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              disabled={!currentMovie}\n              onClick={handleAddToList}\n              data-cy=\"add\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        {(currentMovie && !searchError) && (\n          <>\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard movie={currentMovie} />\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie) => {\n    const isAddedBefore = movies\n      .some(mov => mov.imdbID === movie.imdbID);\n\n    if (!isAddedBefore) {\n      setMovies([...movies, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}